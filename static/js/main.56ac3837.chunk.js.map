{"version":3,"sources":["../../src/utils.js","../../src/DebugOffset.js","../../src/Scrollama.js","../../src/useIntersectionObserver.js","../../src/Step.js","Demo.js","index.js"],"names":["isOffsetInPixels","offset","markerStyles","position","left","width","height","borderTop","zIndex","offsetTextStyles","fontSize","fontFamily","margin","padding","DebugOffset","top","useTop","style","TinyScrollama","props","debug","children","onStepEnter","onStepExit","onStepProgress","isOffsetDefinedInPixels","React","lastScrollTop","setLastScrollTop","windowInnerHeight","setWindowInnerHeight","handleSetLastScrollTop","scrollTop","handleWindowResize","e","window","offsetValue","scrollamaId","Step","data","root","rootMargin","threshold","useState","entry","updateEntry","node","setNode","observer","useRef","useEffect","currentObserver","useIntersectionObserver","useRootMargin","ref","isIntersecting","setIsIntersecting","handleScroll","progress","Math","element","document","direction","Demo","state","steps","setState","this","classes","className","navbar","href","pageTitle","pageSubtitle","graphicContainer","scroller","map","value","isVisible","background","visibility","key","step","round","graphic","PureComponent","injectSheet","display","right","textAlign","color","justifyContent","flexBasis","backgroundColor","alignItems","fontWeight","border","marginBottom","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.56ac3837.chunk.js","sourcesContent":["export const isOffsetInPixels = offset => typeof offset === 'string' && offset.includes('px');\n","import React from 'react';\nimport { isOffsetInPixels } from './utils';\n\n// Since these styles are the only styles in the library, I opted to use inline\n// styling to maintain dependency independence\nconst markerStyles = {\n  position: 'fixed',\n  left: 0,\n  width: '100%',\n  height: 0,\n  borderTop: '2px dashed black',\n  zIndex: 9999,\n};\nconst offsetTextStyles = {\n  fontSize: '12px',\n  fontFamily: 'monospace',\n  margin: 0,\n  padding: 6,\n};\n\nconst useTop = offset => {\n  const offsetInPixels = isOffsetInPixels(offset);\n  if(offsetInPixels) {\n    return offset;\n  } else {\n    return `${offset * 100}%`\n  }\n}\n\nconst DebugOffset = ({ offset }) => {\n  const top = useTop(offset);\n  return (\n    <div style={{ ...markerStyles, top, }}>\n      <p style={offsetTextStyles}>trigger: {offset}</p>\n    </div>\n  );\n}\n\nexport default DebugOffset;\n","import React from 'react';\nimport DebugOffset from './DebugOffset';\nimport { isOffsetInPixels } from './utils';\n\nconst TinyScrollama = props => {\n  const {\n    debug,\n    children,\n    offset,\n    onStepEnter,\n    onStepExit,\n    onStepProgress,\n  } = props;\n  const isOffsetDefinedInPixels = isOffsetInPixels(offset)\n  const [lastScrollTop, setLastScrollTop] = React.useState(0);\n  const [windowInnerHeight, setWindowInnerHeight] = React.useState(null);\n  const handleSetLastScrollTop = (scrollTop) => {\n    setLastScrollTop(scrollTop);\n  };\n\n  const handleWindowResize = (e) => {\n    setWindowInnerHeight(window.innerHeight)\n  }\n\n  React.useEffect(() => {\n    if(isOffsetDefinedInPixels) {\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }\n  }, []);\n\n\n  const offsetValue = isOffsetDefinedInPixels \n    ? (+offset.replace('px', '') / (windowInnerHeight || window.innerHeight))\n    : offset;\n\n  return (\n    <React.Fragment>\n      {debug && <DebugOffset offset={offset} />}\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          scrollamaId: `react-scrollama-${i}`,\n          offset: offsetValue,\n          onStepEnter,\n          onStepExit,\n          onStepProgress,\n          lastScrollTop,\n          handleSetLastScrollTop,\n        });\n      })}\n    </React.Fragment>\n  );\n};\n\nTinyScrollama.defaultProps = {\n  onStepProgress: null,\n  onStepEnter: () => {},\n  onStepExit: () => {},\n};\n\nexport default TinyScrollama;\n","import { useEffect, useRef, useState } from 'react';\n\n/* \n * Thanks to Justin Travis Waith-Mair\n * https://medium.com/the-non-traditional-developer/how-to-use-an-intersectionobserver-in-a-react-hook-9fb061ac6cb5\n */\n\nexport default ({ root = null, rootMargin, threshold = 0 }) => {\n  const [entry, updateEntry] = useState({});\n  const [node, setNode] = useState(null);\n  const observer = useRef(null);\n  useEffect(\n    () => {\n      if (observer.current) observer.current.disconnect();\n      observer.current = new window.IntersectionObserver(\n        ([entry]) => updateEntry(entry),\n        {\n          root,\n          rootMargin,\n          threshold\n        }\n      );\n\n      const { current: currentObserver } = observer;\n\n      if (node) currentObserver.observe(node);\n\n      return () => currentObserver.disconnect();\n    },\n    [node, root, rootMargin, threshold]\n  );\n  return [setNode, entry];\n};\n","import React from 'react';\nimport useIntersectionObserver from './useIntersectionObserver';\n\nconst useRootMargin = offset => {\n  return `-${offset * 100}% 0px -${100 - offset * 100}% 0px`;\n}\n\nconst Step = props => {\n  const {\n    children,\n    data,\n    handleSetLastScrollTop,\n    lastScrollTop,\n    onStepEnter,\n    onStepExit,\n    onStepProgress,\n    offset,\n    scrollamaId,\n  } = props;\n  const rootMargin = useRootMargin(offset);\n  const [ref, entry] = useIntersectionObserver({\n    rootMargin,\n    threshold: 0,\n  });\n  const [isIntersecting, setIsIntersecting] = React.useState(false);\n\n  const handleScroll = () => {\n    const { height, top } = entry.target.getBoundingClientRect();\n    const progress = Math.min(1, Math.max(0, (window.innerHeight * offset - top) / height));\n\n    onStepProgress &&\n      onStepProgress({\n        progress,\n        scrollamaId,\n        data,\n        element: entry.target,\n        entry,\n      });\n  };\n\n  React.useEffect(() => {\n    const scrollTop = document.documentElement.scrollTop;\n    const direction = lastScrollTop < scrollTop ? 'down' : 'up';\n    if (entry && !entry.isIntersecting && isIntersecting) {\n      onStepExit({ element: entry.target, scrollamaId, data, entry, direction });\n      setIsIntersecting(false);\n      handleSetLastScrollTop(scrollTop)\n    } else if (entry && entry.isIntersecting && !isIntersecting) {\n      setIsIntersecting(true);\n      onStepEnter({ element: entry.target, scrollamaId, data, entry, direction});\n      handleSetLastScrollTop(scrollTop)\n    }\n    if (entry && entry.isIntersecting && onStepProgress) {\n      document.addEventListener('scroll', handleScroll);\n      return () => {\n        document.removeEventListener('scroll', handleScroll);\n      };\n    }\n  }, [entry]);\n\n  return React.cloneElement(React.Children.only(children), {\n    'data-react-scrollama-id': scrollamaId,\n    ref,\n    entry,\n  });\n};\n\nStep.defaultProps = {\n  onStepProgress: null,\n  onStepEnter: () => {},\n  onStepExit: () => {},\n};\n\nexport default Step;\n","import React, { PureComponent } from 'react';\nimport injectSheet from 'react-jss';\nimport { Scrollama, Step } from 'react-scrollama';\n\nconst styles = {\n  navbar: {\n    position: 'fixed',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    zIndex: 1,\n    '& a': {\n      display: 'block',\n      fontSize: '20px',\n      padding: '20px',\n    },\n  },\n  pageTitle: {\n    textAlign: 'center',\n    fontSize: 30,\n    margin: '110px 0 10px',\n  },\n  pageSubtitle: {\n    textAlign: 'center',\n    fontSize: '24px',\n    color: '#888',\n  },\n  graphicContainer: {\n    padding: '40vh 2vw 70vh',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  graphic: {\n    flexBasis: '60%',\n    position: 'sticky',\n    width: '100%',\n    height: '60vh',\n    top: '20vh',\n    backgroundColor: '#aaa',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '& p': {\n      fontSize: '5rem',\n      fontWeight: 700,\n      textAlign: 'center',\n      color: '#fff',\n    },\n  },\n  scroller: {\n    flexBasis: '35%',\n  },\n  step: {\n    margin: '0 auto 3rem auto',\n    padding: '180px 0',\n    border: '1px solid #333',\n    '& p': {\n      textAlign: 'center',\n      padding: '1rem',\n      fontSize: '1.8rem',\n      margin: 0,\n    },\n    '&:last-child': {\n      marginBottom: 0,\n    },\n  },\n};\n\nclass Demo extends PureComponent {\n  state = {\n    data: 0,\n    steps: [10, 20, 30],\n    progress: 0,\n  };\n\n  onStepEnter = ({ data }) => {\n    this.setState({ data });\n  };\n\n  onStepExit = ({ direction, data }) => {\n    if (direction === 'up' && data === this.state.steps[0]) {\n      this.setState({ data: 0 });\n    }\n  };\n\n  onStepProgress = ({ progress }) => {\n    this.setState({ progress });\n  };\n\n  render() {\n    const { data, steps, progress } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className={classes.navbar}>\n          <a href=\"https://github.com/jsonkao/react-scrollama\">GitHub</a>\n        </div>\n        <p className={classes.pageTitle}>\n          <a href=\"https://github.com/jsonkao/react-scrollama\">\n            React Scrollama\n          </a>{' '}\n          Example\n        </p>\n        <p className={classes.pageSubtitle}>Scroll ↓</p>\n        <div className={classes.graphicContainer}>\n          <div className={classes.scroller}>\n            <Scrollama\n              onStepEnter={this.onStepEnter}\n              onStepExit={this.onStepExit}\n              progress\n              onStepProgress={this.onStepProgress}\n              offset={0.4}\n              debug\n            >\n              {steps.map(value => {\n                const isVisible = value === data;\n                const background = isVisible\n                  ? `rgba(44,127,184, ${progress})`\n                  : 'white';\n                const visibility = isVisible ? 'visible' : 'hidden';\n                return (\n                  <Step data={value} key={value}>\n                    <div className={classes.step} style={{ background }}>\n                      <p>step value: {value}</p>\n                      <p style={{ visibility }}>\n                        {Math.round(progress * 1000) / 10 + '%'}\n                      </p>\n                    </div>\n                  </Step>\n                );\n              })}\n            </Scrollama>\n          </div>\n          <div className={classes.graphic}>\n            <p>{data}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectSheet(styles)(Demo);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\n\nReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}